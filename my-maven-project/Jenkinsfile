pipeline {
    agent any

    tools {
        maven 'M3'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/akhil2099/maven-demo.git'
            }
        }

        stage('Build') {
            steps {
                dir('my-maven-project') {
                    sh 'mvn -B -DskipTests clean package'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_TOKEN')]) {
                        dir('my-maven-project') {
                            sh """
                              mvn clean verify sonar:sonar \
                              -Dsonar.projectKey=maven-demo \
                              -Dsonar.login=${SONAR_TOKEN} \
                              -Dsonar.host.url=http://sonarqube-sonarqube-1:9000
                            """
                        }
                    }
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 15, unit: 'SECONDS') {
                    script {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Quality Gate failed: ${qualityGate.status}"
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for more details.'
        }
    }
}

