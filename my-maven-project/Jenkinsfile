pipeline {
    agent any

    environment {
       MAVEN_TOOL = tool name: 'Maven 3.8.7', type: 'Tool'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/akhil2099/maven-demo.git'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'SonarQube', variable: 'SONAR_TOKEN')]) {
                        // Run SonarQube analysis with the token
                        sh """
                            mvn clean verify sonar:sonar \
                            -Dsonar.projectKey=maven-demo \
                            -Dsonar.login=${SONAR_TOKEN} \
                            -Dsonar.host.url=http://localhost:9000
                        """
                    }
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 15, unit: 'MINUTES') {  // Increased timeout
                    script {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Quality Gate failed: ${qualityGate.status}"
                        }
                    }
                }
            }
        }
        stage('Build Project') {
            steps {
                sh "${MAVEN_TOOL}/bin/mvn clean package"  // Build the project after quality gate pass
            }
        }
    }

    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for more details.'
        }
    }
}

